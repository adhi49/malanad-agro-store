{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tezad\\\\project-development\\\\malanad-agro-store\\\\src\\\\pages\\\\Inventory.jsx\",\n  _s = $RefreshSig$();\n// InventoryForm.jsx\nimport React, { useEffect, useState } from 'react';\nimport { Button } from '@mui/material';\nimport InventoryModal from '../components/inventory/InventoryModal';\nimport { AddInventory, getInventory } from '../Api/Api';\nimport InventoryList from '../components/InventoryList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  inventoryName: '',\n  category: '',\n  price: '',\n  unit: '',\n  sourceCompany: '',\n  availableQuantity: '',\n  paymentStatus: ''\n};\nconst Inventory = () => {\n  _s();\n  const [formData, setFormData] = useState(initialState);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [dataList, setInventoryList] = useState([]);\n  const toggleModal = () => {\n    setModalOpen(prevState => !prevState);\n  };\n  const saveInventory = async data => {\n    try {\n      const response = await AddInventory(data);\n      alert(response.message);\n      toggleModal();\n      fetchInventoryList(); // Fetch updated list\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error(\"AddInventory Error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert(\"Failed to save inventory: \" + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Unknown error\"));\n    }\n  };\n  const fetchInventoryList = async () => {\n    const result = await getInventory();\n    setInventoryList((result === null || result === void 0 ? void 0 : result.data) || []);\n  };\n  useEffect(() => {\n    fetchInventoryList();\n  }, []);\n  const handleGetInventory = async id => {\n    const item = await getOneInventory(id);\n    if (!item || !item.data) {\n      console.warn('item not found for ID:', id, item);\n      return;\n    }\n    console.log('item is getting', item);\n    setFormData({\n      ...item.data,\n      id: id\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => setModalOpen(true),\n      children: \"+ Add New Purchase Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InventoryList, {\n      dataList: dataList,\n      handleGetInventory: handleGetInventory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InventoryModal, {\n      isOpen: isModalOpen,\n      onClose: toggleModal,\n      saveInventory: saveInventory,\n      formData: formData,\n      setFormData: setFormData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Inventory, \"Qrft3dQvpz4oWCPo0rTfR8T4v+0=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useEffect","useState","Button","InventoryModal","AddInventory","getInventory","InventoryList","jsxDEV","_jsxDEV","initialState","inventoryName","category","price","unit","sourceCompany","availableQuantity","paymentStatus","Inventory","_s","formData","setFormData","isModalOpen","setModalOpen","dataList","setInventoryList","toggleModal","prevState","saveInventory","data","response","alert","message","fetchInventoryList","error","_error$response","_error$response2","_error$response2$data","console","result","handleGetInventory","id","item","getOneInventory","warn","log","style","padding","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/tezad/project-development/malanad-agro-store/src/pages/Inventory.jsx"],"sourcesContent":["// InventoryForm.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport InventoryModal from '../components/inventory/InventoryModal';\r\nimport { AddInventory, getInventory } from '../Api/Api';\r\nimport InventoryList from '../components/InventoryList';\r\nconst initialState = {\r\n    inventoryName: '',\r\n    category: '',\r\n    price: '',\r\n    unit: '',\r\n    sourceCompany: '',\r\n    availableQuantity: '',\r\n    paymentStatus: ''\r\n}\r\n\r\nconst Inventory = () => {\r\n    const [formData, setFormData] = useState(initialState)\r\n    const [isModalOpen, setModalOpen] = useState(false);\r\n    const [dataList, setInventoryList] = useState([])\r\n    const toggleModal = () => {\r\n        setModalOpen(prevState => !prevState)\r\n    }\r\n\r\n    const saveInventory = async (data) => {\r\n        try {\r\n            const response = await AddInventory(data);\r\n            alert(response.message);\r\n            toggleModal();\r\n            fetchInventoryList(); // Fetch updated list\r\n        } catch (error) {\r\n            console.error(\"AddInventory Error:\", error.response?.data || error.message);\r\n            alert(\"Failed to save inventory: \" + (error.response?.data?.message || \"Unknown error\"));\r\n        }\r\n    };\r\n    const fetchInventoryList = async () => {\r\n        const result = await getInventory();\r\n        setInventoryList(result?.data || []);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchInventoryList()\r\n    }, [])\r\n\r\n\r\n    const handleGetInventory = async (id) => {\r\n        const item = await getOneInventory(id)\r\n        if (!item || !item.data) {\r\n            console.warn('item not found for ID:', id, item);\r\n            return;\r\n        }\r\n        console.log('item is getting', item);\r\n        setFormData({ ...item.data, id: id });\r\n    };\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <Button variant=\"contained\" onClick={() => setModalOpen(true)}>\r\n                + Add New Purchase Entry\r\n            </Button>\r\n            <InventoryList dataList={dataList} handleGetInventory={handleGetInventory} />\r\n            <InventoryModal isOpen={isModalOpen} onClose={toggleModal} saveInventory={saveInventory} formData={formData} setFormData={setFormData} />\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Inventory;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}